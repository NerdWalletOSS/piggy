
def VERSION_CODE = 0
def VERSION_NAME = "0.0"

buildscript {
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.0.4'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.6.10"
    }

    allprojects {
        repositories {
            google()
            mavenCentral()
            mavenLocal()
        }
    }
}

def localRnDirectory = "$projectDir/../../../node_modules/react-native/android"
println "including $localRnDirectory"
repositories {
    maven { url localRnDirectory }
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'


android {
    compileSdkVersion 31
    buildToolsVersion "30.0.3"

    defaultConfig {
        resValue "string", "sdk_version_name", VERSION_NAME
        resValue "string", "sdk_version_code", ""+VERSION_CODE
        minSdkVersion 16
        targetSdkVersion 31
        multiDexEnabled true
        testInstrumentationRunner 'com.nerdwallet.test.TestRunner'
    }

    buildTypes {
        debug {
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
}

dependencies {
    api "org.greenrobot:eventbus:3.2.0"
    implementation "com.facebook.react:react-native:+"
    implementation "com.google.code.gson:gson:2.8.9"
    implementation "androidx.annotation:annotation:1.3.0"
    implementation "com.squareup.okhttp3:okhttp:4.9.1"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.6.10"
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test:rules:1.4.0'
    androidTestImplementation "androidx.annotation:annotation:1.3.0"
    androidTestImplementation "junit:junit:4.13.1"
    androidTestImplementation "org.mockito:mockito-core:3.4.0"
    androidTestImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
    androidTestImplementation "org.mockito:mockito-android:3.4.0"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.4.0"
    androidTestImplementation "androidx.test.espresso:espresso-intents:3.4.0"
    androidTestImplementation "androidx.test.espresso:espresso-web:3.4.0"
}

/* used to set properties on build variants. we currently use this to set
the correct output filename and path for our final build artifact */
android.libraryVariants.all { variant ->
    def type = variant.baseName /* debug or release */
    println "INFO: libraryVariants " + type

    variant.outputs.all { output ->
        def aarPath = "nw-piggy-lib-" + VERSION_NAME + "-" + VERSION_CODE + "-" + type + ".aar"
        println "INFO: setting '$type' output file to $aarPath"
        outputFileName = aarPath
    }
}
